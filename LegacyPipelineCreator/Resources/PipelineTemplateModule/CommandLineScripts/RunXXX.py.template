# This file was autogenerated by the LegacyPipelineCreator
import argparse
import textwrap

import slicer
from {{MODULE_NAME}} import {{MODULE_NAME}}Logic

def main(inputFilename, outputFilename):
  logic = {{MODULE_NAME}}Logic()
  inputNode = slicer.mrmlScene.AddNewNodeByClass(logic.GetInputType())
  store = inputNode.CreateDefaultStorageNode()
  store.SetFileName(inputFilename)
  store.ReadData(inputNode)
  store.UnRegister(None) #assuming CreateDefaultStorageNode returns an owning pointer in C++ land

  output = logic.Run(inputNode)
  slicer.util.saveNode(output, outputFilename)

if __name__ == "__main__":
  parser = argparse.ArgumentParser(epilog=textwrap.dedent('''\
    Runs the slicer pipeline module '{{MODULE_NAME}}'.'''))
  parser.add_argument('inputFilename', help="Input filename")
  parser.add_argument('outputFilename', help="Output filename")
  args = parser.parse_args()
  main(args.inputFilename, args.outputFilename)
  slicer.app.exit()
